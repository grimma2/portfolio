"use client";

import { useState } from "react";
import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";
import { FiGithub, FiExternalLink, FiCode, FiEye, FiStar, FiClock } from "react-icons/fi";
import { ProjectPreviewModal } from "./project-preview-modal";

// –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
const professionalProjects = [
  {
    id: 1,
    title: "Back Office –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤",
    description:
      "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏, —Å–¥–µ–ª–∫–∞–º–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π (500+ RPS).",
    image: "/placeholder-project.jpg",
    tags: ["Python", "TypeScript", "High Load", "Finance"],
    demo: "",
    github: "",
    type: "Full Stack",
    achievements: [
      "–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å –º–∏–ª–ª–∏–æ–Ω–∞–º–∏ –∑–∞–ø–∏—Å–µ–π", 
      "–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–¥–∞", 
      "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –≤ live —Ä–µ–∂–∏–º–µ"
    ]
  },
  {
    id: 2,
    title: "–°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ Telegram –∫–∞–Ω–∞–ª–æ–≤",
    description:
      "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–º—É –∫–∞–Ω–∞–ª—É –≤ Telegram.",
    image: "/tgscope.jpg",
    tags: ["Python", "FastAPI", "Django", "Vue", "ClickHouse", "RabbitMQ"],
    demo: "https://tgscope.ru/home",
    github: "",
    type: "Full Stack",
    achievements: [
      "–ü–∞—Ä—Å–µ—Ä—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telethon –∏ Pyrogram", 
      "API –Ω–∞ FastAPI –∏ Django REST Framework", 
      "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —Ç—ã—Å—è—á–∞–º–∏ RPS", 
      "Telegram –±–æ—Ç –Ω–∞ aiogram –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    ]
  },
];

// –õ–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
const personalProjects = [
  {
    id: 3,
    title: "FastPorgs",
    description:
      "–®–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è. –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º –∏ –∑–Ω–∞–Ω–∏—è—Ö –≤ –æ–±–ª–∞—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.",
    image: "/placeholder-project.jpg",
    tags: ["Education", "Python", "Automation", "Teaching"],
    demo: "https://fastprogs.ru",
    github: "",
    type: "Side Project",
    status: "–ê–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–µ–∫—Ç",
    progress: 85,
    features: [
      "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
      "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è",
      "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–æ–π",
      "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—á–µ–Ω–∏–∫–æ–≤"
    ]
  },
  {
    id: 4,
    title: "AI Code Refactoring",
    description:
      "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ü–∏–∫–ª —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò. –ü—Ä–æ–µ–∫—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ª—É—á—à–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ –∫–æ–¥–∞ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —á–µ–ª–æ–≤–µ–∫–æ–º.",
    image: "/placeholder-project.jpg",
    tags: ["AI", "n8n", "Git", "Automation"],
    demo: "",
    github: "https://github.com/yourusername/ai-code-refactoring",
    type: "Side Project",
    status: "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
    progress: 60,
    features: [
      "Workflow –Ω–∞ n8n –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º",
      "–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –∏ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤",
      "–ò–ò-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–æ–¥–∞",
      "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    ]
  },
];

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ñ–æ–∫—É—Å–µ
const currentFocus = {
  title: "–ú–æ–π —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å",
  description: "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —è –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—Å—å –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö:",
  areas: [
    {
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –ø–æ–º–æ—â—å—é –ò–ò",
      description: "–ò—â—É –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ –æ–±–ª–µ–≥—á–µ–Ω–∏—é –∂–∏–∑–Ω–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.",
      icon: "ü§ñ"
    },
    {
      title: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      description: "–ü–æ–≥—Ä—É–∂–∞—é—Å—å –≤ –Ω–æ–≤—É—é –¥–ª—è –º–µ–Ω—è –ø—Ä–µ–¥–º–µ—Ç–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ –≤ ServicePipe.",
      icon: "üîí"
    },
    {
      title: "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      description: "–†–∞–∑–≤–∏–≤–∞—é —à–∫–æ–ª—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è FastPorgs –∏ —É–ª—É—á—à–∞—é –ø—Ä–æ—Ü–µ—Å—Å—ã –æ–±—É—á–µ–Ω–∏—è.",
      icon: "üéì"
    }
  ]
};

export function ProjectsSection({ showAllProjects = false }) {
  const [selectedProject, setSelectedProject] = useState<null | {
    name: string;
    url: string;
  }>(null);
  
  const handlePreviewClick = (name: string, url: string) => {
    if (url) {
      setSelectedProject({ name, url });
    }
  };

  const handleCloseModal = () => {
    setSelectedProject(null);
  };

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ 2 –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–ª–∏ –≤—Å–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
  const professionalProjectsToShow = showAllProjects
    ? professionalProjects
    : professionalProjects.slice(0, 2);

  const personalProjectsToShow = showAllProjects
    ? personalProjects
    : personalProjects.slice(0, 2);

  return (
    <>
      <section className="py-20 bg-secondary dark:bg-gray-800">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
            className="text-center mb-16"
          >
            <h2 className="text-3xl md:text-4xl font-bold mb-4">–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã</h2>
            <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
              –í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º–∏ —è —Ä–∞–±–æ—Ç–∞–ª. –£ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –µ—Å—Ç—å
              —Å–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ü–µ–ª—å –∏ –Ω–∞–±–æ—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.
            </p>
            {!showAllProjects && (
              <Link 
                href="/projects"
                className="inline-block mt-6 text-accent hover:underline"
              >
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
              </Link>
            )}
          </motion.div>

          <h3 className="text-2xl font-bold mb-8 border-l-4 border-accent pl-4">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
          
          <div className="grid md:grid-cols-2 gap-8 mb-16">
            {professionalProjectsToShow.map((project, index) => (
              <motion.div
                key={project.id}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="bg-white dark:bg-gray-900 rounded-lg overflow-hidden shadow-md"
              >
                <div className="relative h-56 bg-gray-200 dark:bg-gray-700">
                  {project.image && project.image !== "/placeholder-project.jpg" ? (
                    <Image
                      src={project.image}
                      alt={project.title}
                      fill
                      style={{ objectFit: 'cover' }}
                      className="transition-transform duration-300 hover:scale-105"
                    />
                  ) : (
                    <div className="absolute inset-0 flex items-center justify-center text-4xl">
                      <FiCode />
                    </div>
                  )}
                  <div className="absolute top-4 right-4 bg-accent text-white text-sm px-2 py-1 rounded-md">
                    {project.type}
                  </div>
                </div>
                <div className="p-6">
                  <h3 className="text-xl font-bold mb-2">{project.title}</h3>
                  <p className="text-gray-600 dark:text-gray-400 mb-4">
                    {project.description}
                  </p>
                  <div className="mb-4">
                    <h4 className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                      –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:
                    </h4>
                    <ul className="list-disc list-inside text-sm text-gray-600 dark:text-gray-400">
                      {project.achievements.map((achievement, i) => (
                        <li key={i} className="mb-1">
                          {achievement}
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div className="flex flex-wrap gap-2 mb-6">
                    {project.tags.map((tag) => (
                      <span
                        key={tag}
                        className="bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full text-xs px-3 py-1"
                      >
                        {tag}
                      </span>
                    ))}
                  </div>
                  <div className="flex gap-4">
                    {project.github && (
                      <a
                        href={project.github}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors"
                        aria-label="GitHub Repository"
                      >
                        <FiGithub size={20} />
                      </a>
                    )}
                    {project.demo && (
                      <>
                        <a
                          href={project.demo}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors"
                          aria-label="Live Demo"
                        >
                          <FiExternalLink size={20} />
                        </a>
                        <button
                          onClick={() => handlePreviewClick(project.title, project.demo)}
                          className="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors"
                          aria-label="Preview"
                        >
                          <FiEye size={20} />
                        </button>
                      </>
                    )}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>

          <h3 className="text-2xl font-bold mb-8 border-l-4 border-accent pl-4">–õ–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h3>
          
          <div className="grid md:grid-cols-2 gap-8 mb-16">
            {personalProjectsToShow.map((project, index) => (
              <motion.div
                key={project.id}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="bg-white dark:bg-gray-900 rounded-lg overflow-hidden shadow-md border-t-4 border-accent"
              >
                <div className="relative w-full overflow-hidden">
                  <div className="absolute top-4 right-4 bg-accent text-white text-xs px-2 py-1 rounded-full">
                    {project.status}
                  </div>
                </div>
                
                <div className="p-6">
                  <div className="flex justify-between items-start mb-4">
                    <h3 className="text-xl font-bold">{project.title}</h3>
                  </div>
                  
                  <p className="text-gray-600 dark:text-gray-400 mb-4">
                    {project.description}
                  </p>
                  
                  <div className="mb-4">
                    <div className="flex justify-between mb-1">
                      <span className="text-sm font-medium">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                      <span className="text-sm font-medium">{project.progress}%</span>
                    </div>
                    <div className="h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden">
                      <motion.div 
                        className="h-full bg-accent rounded-full" 
                        initial={{ width: 0 }}
                        whileInView={{ width: `${project.progress}%` }}
                        viewport={{ once: true }}
                        transition={{ duration: 1, ease: "easeOut" }}
                      />
                    </div>
                  </div>
                  
                  <div className="mb-4">
                    <h4 className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                      –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
                    </h4>
                    <ul className="list-disc list-inside text-sm text-gray-600 dark:text-gray-400">
                      {project.features.map((feature, i) => (
                        <li key={i} className="mb-1">
                          {feature}
                        </li>
                      ))}
                    </ul>
                  </div>
                  
                  <div className="flex flex-wrap gap-2 mb-6">
                    {project.tags.map((tag) => (
                      <span
                        key={tag}
                        className="bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full text-xs px-3 py-1"
                      >
                        {tag}
                      </span>
                    ))}
                  </div>
                  
                  <div className="flex gap-4">
                    {project.github && (
                      <a
                        href={project.github}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors flex items-center"
                        aria-label="GitHub Repository"
                      >
                        <FiGithub size={20} className="mr-1" /> GitHub
                      </a>
                    )}
                    {project.demo && (
                      <>
                        <a
                          href={project.demo}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors flex items-center"
                          aria-label="Demo"
                        >
                          <FiExternalLink size={20} className="mr-1" /> Demo
                        </a>
                        <button
                          onClick={() => handlePreviewClick(project.title, project.demo)}
                          className="text-gray-600 dark:text-gray-400 hover:text-accent dark:hover:text-accent transition-colors flex items-center"
                          aria-label="Preview"
                        >
                          <FiEye size={20} className="mr-1" /> –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                        </button>
                      </>
                    )}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
          
          {/* –°–µ–∫—Ü–∏—è —Å —Ç–µ–∫—É—â–∏–º —Ñ–æ–∫—É—Å–æ–º */}
          {showAllProjects && (
            <div className="mt-16">
              <h3 className="text-2xl font-bold mb-8 border-l-4 border-accent pl-4">{currentFocus.title}</h3>
              
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5 }}
                className="bg-white dark:bg-gray-900 rounded-lg p-8 shadow-md"
              >
                <p className="text-gray-700 dark:text-gray-300 mb-8 text-lg">
                  {currentFocus.description}
                </p>
                
                <div className="grid md:grid-cols-3 gap-6 mb-10">
                  {currentFocus.areas.map((area, index) => (
                    <motion.div
                      key={index}
                      initial={{ opacity: 0, y: 20 }}
                      whileInView={{ opacity: 1, y: 0 }}
                      viewport={{ once: true }}
                      transition={{ duration: 0.5, delay: index * 0.1 }}
                      className="bg-gray-50 dark:bg-gray-800 p-6 rounded-lg"
                    >
                      <div className="text-4xl mb-4">{area.icon}</div>
                      <h4 className="text-xl font-bold mb-2">{area.title}</h4>
                      <p className="text-gray-600 dark:text-gray-400">
                        {area.description}
                      </p>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            </div>
          )}
        </div>
      </section>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º */}
      {selectedProject && (
        <ProjectPreviewModal
          isOpen={!!selectedProject}
          onClose={handleCloseModal}
          projectUrl={selectedProject.url}
          projectName={selectedProject.name}
        />
      )}
    </>
  );
} 